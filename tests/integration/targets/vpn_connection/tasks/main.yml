---
- name: setup vpc
  ngine_io.cloudstack.vpc:
    name: my_vpc
    display_text: my_vpc
    cidr: 10.79.1.1/16
    zone: "{{ cs_common_zone_adv }}"
  register: vpc
- name: verify setup vpc
  assert:
    that:
      - vpc is successful

- name: setup customer gateway
  ngine_io.cloudstack.vpn_customer_gateway:
    name: my_vpn_customer_gateway
    cidr: 192.168.79.0/24
    esp_policy: aes256-sha1;modp1536
    gateway: 10.79.1.1
    ike_policy: aes256-sha1;modp1536
    ipsec_psk: verysecurepassphrase
    esp_lifetime: 3600
  register: vcg
- name: setup customer gateway
  assert:
    that:
      - vcg is successful

- name: setup remove vpn connection
  ngine_io.cloudstack.vpn_connection:
    vpn_customer_gateway: my_vpn_customer_gateway
    vpc: my_vpc
    zone: "{{ cs_common_zone_adv }}"
    state: absent
  register: vpn_conn
- name: verify setup remove vpn connection
  assert:
    that:
      - vpn_conn is successful

- name: setup vpn gateway absent
  ngine_io.cloudstack.vpn_gateway:
    vpc: my_vpc
    zone: "{{ cs_common_zone_adv }}"
    state: absent
  register: vpn_gateway
- name: verify setup vpn gateway absent
  assert:
    that:
      - vpn_gateway is successful

- name: test fail create vpn connection without gateway and force
  ngine_io.cloudstack.vpn_connection:
    vpn_customer_gateway: my_vpn_customer_gateway
    vpc: my_vpc
    zone: "{{ cs_common_zone_adv }}"
  ignore_errors: yes
  register: vpn_conn
- name: verify test fail create vpn connection without gateway and force
  assert:
    that:
      - vpn_conn is failed
      - vpn_conn.msg == "VPN gateway not found and not forced to create one"

- name: test create vpn connection with force in check mode
  ngine_io.cloudstack.vpn_connection:
    vpn_customer_gateway: my_vpn_customer_gateway
    vpc: my_vpc
    force: yes
    zone: "{{ cs_common_zone_adv }}"
  check_mode: yes
  register: vpn_conn
- name: verify test create vpn connection with force in check mode
  assert:
    that:
      - vpn_conn is changed

- name: test create vpn connection with force
  ngine_io.cloudstack.vpn_connection:
    vpn_customer_gateway: my_vpn_customer_gateway
    vpc: my_vpc
    force: yes
    zone: "{{ cs_common_zone_adv }}"
  register: vpn_conn
- name: verify test create vpn connection with force
  assert:
    that:
      - vpn_conn is changed
      - vpn_conn.vpn_customer_gateway == "my_vpn_customer_gateway"
      - vpn_conn.vpc == "my_vpc"

- name: test create vpn connection with force idempotence
  ngine_io.cloudstack.vpn_connection:
    vpn_customer_gateway: my_vpn_customer_gateway
    vpc: my_vpc
    force: yes
    zone: "{{ cs_common_zone_adv }}"
  register: vpn_conn
- name: verify test create vpn connection with force idempotence
  assert:
    that:
      - vpn_conn is not changed
      - vpn_conn.vpn_customer_gateway == "my_vpn_customer_gateway"
      - vpn_conn.vpc == "my_vpc"

- name: test remove vpn connection in check mode
  ngine_io.cloudstack.vpn_connection:
    vpn_customer_gateway: my_vpn_customer_gateway
    vpc: my_vpc
    zone: "{{ cs_common_zone_adv }}"
    state: absent
  check_mode: yes
  register: vpn_conn
- name: verify test remove vpn connection in check mode
  assert:
    that:
      - vpn_conn is changed
      - vpn_conn.vpn_customer_gateway == "my_vpn_customer_gateway"
      - vpn_conn.vpc == "my_vpc"

- name: test remove vpn connection
  ngine_io.cloudstack.vpn_connection:
    vpn_customer_gateway: my_vpn_customer_gateway
    vpc: my_vpc
    zone: "{{ cs_common_zone_adv }}"
    state: absent
  register: vpn_conn
- name: verify test remove vpn connection
  assert:
    that:
      - vpn_conn is changed
      - vpn_conn.vpn_customer_gateway == "my_vpn_customer_gateway"
      - vpn_conn.vpc == "my_vpc"

- name: test remove vpn connection idempotence
  ngine_io.cloudstack.vpn_connection:
    vpn_customer_gateway: my_vpn_customer_gateway
    vpc: my_vpc
    zone: "{{ cs_common_zone_adv }}"
    state: absent
  register: vpn_conn
- name: verify test remove vpn connection idempotence
  assert:
    that:
      - vpn_conn is not changed

- name: setup create vpn gateway
  ngine_io.cloudstack.vpn_gateway:
    vpc: my_vpc
    zone: "{{ cs_common_zone_adv }}"
  register: vpn_gateway
- name: verify setup create vpn gateway
  assert:
    that:
      - vpn_gateway is success

- name: test create vpn connection without force in check mode
  ngine_io.cloudstack.vpn_connection:
    vpn_customer_gateway: my_vpn_customer_gateway
    vpc: my_vpc
    zone: "{{ cs_common_zone_adv }}"
  check_mode: yes
  register: vpn_conn
- name: verify test create vpn connection without force in check mode
  assert:
    that:
      - vpn_conn is changed

- name: test create vpn connection without force
  ngine_io.cloudstack.vpn_connection:
    vpn_customer_gateway: my_vpn_customer_gateway
    vpc: my_vpc
    zone: "{{ cs_common_zone_adv }}"
  register: vpn_conn
- name: verify test create vpn connection without force
  assert:
    that:
      - vpn_conn is changed
      - vpn_conn.vpn_customer_gateway == "my_vpn_customer_gateway"
      - vpn_conn.vpc == "my_vpc"

- name: test create vpn connection without force
  ngine_io.cloudstack.vpn_connection:
    vpn_customer_gateway: my_vpn_customer_gateway
    vpc: my_vpc
    zone: "{{ cs_common_zone_adv }}"
  register: vpn_conn
- name: verify test create vpn connection without force
  assert:
    that:
      - vpn_conn is not changed
      - vpn_conn.vpn_customer_gateway == "my_vpn_customer_gateway"
      - vpn_conn.vpc == "my_vpc"

- name: cleanup remove vpn connection
  ngine_io.cloudstack.vpn_connection:
    vpn_customer_gateway: my_vpn_customer_gateway
    vpc: my_vpc
    zone: "{{ cs_common_zone_adv }}"
    state: absent
  register: vpn_conn
- name: verify cleanup remove vpn connection idempotence
  assert:
    that:
      - vpn_conn is successful
