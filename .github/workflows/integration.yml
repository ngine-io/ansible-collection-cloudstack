name: Collection integration

on:
  push:
    branches:
    - master
  pull_request:
  schedule:
  - cron: 30 6 * * *

jobs:
  integration-test:
    name: Integration v${{ matrix.container-version }} Ansible-${{ matrix.ansible-branch }} group${{ matrix.group }} Py${{ matrix.python-version }}
    defaults:
      run:
        working-directory: ansible_collections/ngine_io/cloudstack
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - 3.8
        group:
        - 1
        - 2
        ansible-branch:
        - devel
        container-version:
        - 1.4.0
        - 1.2.0
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
        path: ansible_collections/ngine_io/cloudstack

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install ansible and collection dependencies
      run: |
        python -m pip install --upgrade pip
        pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible-branch }}.tar.gz
        pip install -r requirements.txt

    - name: Build and install collection
      run: |
        ansible-galaxy collection build .
        ansible-galaxy collection install *.gz

    - name: Run the tests
      run: >-
        ansible-test
        integration
        --docker
        -v
        --diff
        --color
        --retry-on-error
        --python ${{ matrix.python-version }}
        --continue-on-error
        --coverage
        shippable/cs/group${{ matrix.group }}/
      env:
        ANSIBLE_CLOUDSTACK_CONTAINER: quay.io/ansible/cloudstack-test-container:${{ matrix.container-version }}

    - name: Generate coverage report.
      run: >-
        ansible-test
        coverage xml
        -v
        --requirements
        --group-by command
        --group-by version
    - uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: false
